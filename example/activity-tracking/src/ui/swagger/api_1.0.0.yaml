openapi: 3.0.0
info:
  version: 'v1'
  title: 'Activity Tracking Service - API Reference'
  description: >-
    This is the **Activity Tracking Service** RESTful API documentation implemented
    following the [template-base-ts](https://github.com/LIBE-NUTES/template-base-ts).
  contact:
    email: douglas.rafael@nutes.uepb.edu.br
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'

servers:
  - description: Localhost
    url: https://127.0.0.1:4001/
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/douglas.rafael/template-base-typescript/v1
tags:
  - name: users
    description: Operations for the User resource.
  - name: users.activities
    description: Operations for user Activity resource.

paths:
  /users:
    get:
      tags:
        - users
      summary: Recover users.
      description: >-
        Returns list with users. The query supports Field Selection, Paging,
        Sorting, and Filtering.
      operationId: getAllUsers
      parameters:
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: List of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get users list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - users
      summary: Register user.
      description: Register a new user.
      operationId: addUser
      responses:
        '201':
          description: User successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as
            fields that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register users.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Data of the user to be saved.
        required: true
  '/users/{user_id}':
    get:
      tags:
        - users
      summary: Recover user data.
      description: Recover the user data.
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          example: 5accb6215ba48413e81e7853e
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
      responses:
        '200':
          description: Requested user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect or the
            resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users
      summary: Update user data.
      description: Update the user data.
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          example: 5accb6215ba48413e81e7853e
          schema:
            type: string
      responses:
        '200':
          description: Updated user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update user data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Data of the user to be updated.
        required: true
    delete:
      tags:
        - users
      summary: Delete user data.
      description: Delete the user data.
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: User ID
          example: 5accb6215ba48413e81e7853e
          schema:
            type: string
      responses:
        '204':
          description: >-
            Operation performed successfully. There is no data to be returned
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: "User does not have permission to delete activities."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect or the
            resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client for
            the application response. Only application/json is currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to provide a
            correct request, the server encountered an unexpected condition that
            prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{user_id}/activities:
    get:
      tags:
        - users.activities
      summary: Recover activities.
      operationId: getAllActivities
      description: Returns list with activities. The query supports Field Selection, Paging, Sorting, and Filtering.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - $ref: '#/components/parameters/fieldsParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/sortParam'
        - $ref: '#/components/parameters/filterParam'
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - users.activities
      summary: Register activity.
      operationId: saveActivity
      description: Register a new activity and associate it to an user.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
      responses:
        '201':
          description: Activity logged sucessfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to register activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application / json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        description: Activity to be insert
        required: true
  /users/{user_id}/activities/{activity_id}:
    get:
      tags:
        - users.activities
      summary: Recover activity data.
      operationId: getActivitiyById
      description: Recover the activity data associated with an user.
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: activity_id
          required: true
          description: Id of activity.
          example: 5a62be07d6e34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Successful requisition.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to get activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - users.activities
      summary: Update activity data.
      description: Update the activity data.
      operationId: updateActivity
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: activity_id
          required: true
          description: Id of activity.
          example: 5a62be07d6e34500146d9c544
          schema:
            type: string
      responses:
        '200':
          description: Updated activity data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to update activity data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the client
            for the application response. Only application/json is currently
            accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: ->
            Conflicts have probably occurred with data that can not be duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '415':
          description: >-
            The server does not support the requested payload format. Only
            application/json is accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        description: Data of the activity to be updated.
        required: true
    delete:
      tags:
        - users.activities
      summary: Delete activity data.
      description: Delete the activity data.
      operationId: deleteActivity
      parameters:
        - in: path
          name: user_id
          required: true
          description: Id of user.
          example: 5a62be07d6f33400146c9b61
          schema:
            type: string
        - in: path
          name: activity_id
          required: true
          description: Id of activity.
          example: 5a62be07d6e34500146d9c544
          schema:
            type: string
      responses:
        '204':
          description: Operation performed successfully. There is no data to be returned.
        '401':
          description: Authentication failed due to invalid authentication credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: User does not have permission to delete activities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: >-
            Specified resource does not exist. Usually when the URI is incorrect
            or the resource is not found, or even no longer exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '406':
          description: >-
            The server is not implementing the media type requested by the
            client for the application response. Only application/json is
            currently accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: The rate limit for requests exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: >-
            An internal server error occurred. Although the client appears to
            provide a correct request, the server encountered an unexpected
            condition that prevented it from responding to the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      description: Representation of resource User.
      required:
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5accb6215ba48413e81e7853e
          readOnly: true
        name:
          type: string
          description: Full name of user.
          example: Lorem Ipsum
        email:
          type: string
          description: User email.
          example: loremipsum@mail.com
        created_at:
          type: string
          format: date-time
          description: >-
            Date and hour according to the UTC pattern, automatically generated
            on moment that resource is saved on server.
          readOnly: true
    Activity:
      type: object
      required:
        - name
        - start_time
        - duration
        - intensity_level
        - calories
        - steps
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: 5a62be07de34500146d9c544
        name:
          type: string
          description: Name of activity.
          example: walk
        start_time:
          type: string
          format: date-time
          description: Activity start time according to the UTC.
          example: '2018-08-07T08:25:00.28Z'
        end_time:
          type: string
          format: date-time
          description: Activity end time according to the UTC.
          example: '2018-08-07T09:25:00.000'
        duration:
          type: integer
          description: Total time spent on activity.
          example: 1075000
        max_intensity:
          type: string
          description: Maximum intensity reached in the activity.
          example: very
        max_intensity_duration:
          type: number
          description: 'Time spent in maximum activity intensity, in minutes.'
          example: 60
        calories:
          type: integer
          description: Calories spent during activity.
          example: 123
        steps:
          type: integer
          description: Number of steps taken during the activity.
          example: 1701
        user:
          readOnly: true
          type: string
          format: uuid
          description: User Id
          example: 5a62be07de34500146d9c544
        created_at:
          type: string
          format: date-time
          description: >-
            Date and hour according to the UTC pattern, automatically generated
            on moment that resource is saved on server.
          readOnly: true
    Error:
      type: object
      description: >-
        Default template for error message. All returned errors will follow this
        template.
      required:
        - code
        - message
        - description
      properties:
        code:
          type: integer
          description: >-
            Unique API code that indicates specific details of the error, or
            the actual status code of the response when the unique code is not
            appropriate.
        message:
          type: string
          description: Readable and short description of the error.
        description:
          type: string
          description: Detailed description of the error.
  parameters:
    fieldsParam:
      in: query
      name: fields
      required: false
      description: >-
        Allows you to retrieve only the information you want. To do this,
        simply provide the name of the attributes separated by commas.
        For example: **_fields=field1,field2_** indicates that only
        field1 and field2 should be listed in the query result.
      schema:
        type: array
        items:
          type: string
    pageParam:
      in: query
      name: page
      required: false
      description: The page number.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    limitParam:
      in: query
      name: limit
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int32
        maximum: 100
        default: 20
    sortParam:
      in: query
      name: sort
      required: false
      description: >-
        Contains the names of the attributes, separated by commas, that
        will be used to sort the result of the query. For ascending sort,
        use the '+' character before the attribute name. For descending
        sort, use the '-' character before the attribute name. By default,
        the order is ascending, so the '+' symbol is optional, just enter
        the attribute.
      schema:
        type: array
        items:
          type: string
        default:
          - created_at
    filterParam:
      in: query
      name: ''
      required: false
      description: >-
        To filter a collection by multiple concurrent attributes or filter
        multiple values for an attribute, simply use the attribute/property
        name with an equal sign and the expected values, separated by a comma.
        **_property=value1,value2,value3_**. The query is not case sensitive.
        Example: **_?name=elvis,john_** to retrieve exactly the same users with
        elvis or john name.
        For filtering with logical operators, just follow the syntax:
        **_property=operator:value_**. The available operators are:
         - **gt** -> Defines which value of the attribute is greater than
                    (that is,>) the specified value.
         - **gte** -> Defines which attribute value is greater than or equal to
                    (that is,>=) the specified value.
         - **lt** -> Define the value of the attribute to be less than (that is, <)
                    the specified value.
         - **lte** -> Defines which value of the attribute is less than or equal to
                    (that is, <=) the specified value.

        Example: **_?field1=gte:80&age=lt:100_** to recover the users with age
        is greater than or equal to 80 and less then 100.

      schema:
        type: string
    dateStartParam:
      in: query
      name: date_start
      required: false
      description: >-
        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The
        attribute used for the query will be the registration_date.
      schema:
        type: string
    dateEndParam:
      in: query
      name: date_end
      required: false
      description: >-
        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The
        attribute used for the query will be the registration_date.
      schema:
        type: string
        default: today
    periodParam:
      in: query
      name: period
      required: false
      description: |-
        Sets the period from the available ones:
         - **[1..n]d** - Total days (1d, 2d, ...)
         - **[1..n]w** - Total of weeks (1w, 2w, ...)
         - **[1..n]m** - Total of months (1m, 2m, ...)
         - **[1..n]y** - Total of years (1y, 2y, ...)

        The attribute used for the query will be the registration_date.
      schema:
        type: string
